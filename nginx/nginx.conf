# events { }



# http {
#   include       /etc/nginx/mime.types;
#   upstream goapi {
#     server iot.go:1234;
#   }


#   server {
#     listen 80;

#     access_log /var/log/nginx/data-access.log combined;
#     root /;
#     location = / {

#       rewrite .* /var/www/index.html;
#     }

#     location /api {
#       proxy_pass http://goapi/api;
#         proxy_redirect     off;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $http_host;
#       proxy_set_header X-NginX-Proxy true;

#     }

#     location /.well-known {
#     	root /.well-known;
#     }
#     location /metrics {
#       proxy_pass http://goapi/metrics;
#         proxy_redirect     off;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $http_host;
#       proxy_set_header X-NginX-Proxy true;

#     }
#     location /image {
#       if ($invalid_referer) {
#         return 403;
#       }

#       access_log off;
#       expires 5m;
#       add_header Cache-Control public;
#       proxy_pass http://goapi/image;
#         proxy_redirect     off;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $http_host;
#       proxy_set_header X-NginX-Proxy true;

#       proxy_set_header X-Forwarded-Proto https;
#     }

#     location /ws {
#       access_log      off;
#       proxy_read_timeout 36000s;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $http_host;
#       proxy_set_header X-NginX-Proxy true;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "upgrade";

#       proxy_pass http://goapi/ws;
#         proxy_redirect off;
#     }
#     location ~ .(css)$ {
#       add_header Access-Control-Allow-Origin *;
#       add_header  Content-Type    text/css;
#       root /var/www;
#     }
#     location ~ .(js|png|json|ico|svg|map)$ {
#       add_header Access-Control-Allow-Origin *;
#       root /var/www;
#     }
#   }

# }


events { }



http {
  include       /etc/nginx/mime.types;
  upstream goapi {
    server iot.go:1234;
  }




  server {
      listen 443 ssl;

      ssl_certificate      /certs/fullchain.pem;
      ssl_certificate_key  /certs/privkey.pem;

      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options "nosniff";
      add_header X-XSS-Protection "1; mode=block";

      # Блокируем менеджеры загрузки
      if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
          return 403;
      }
      # Блокируем некоторые типы ботов
      if ($http_user_agent ~* msnbot|scrapbot) {
          return 403;
      }

      server_tokens off;

      ssl_prefer_server_ciphers On;
      ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
      add_header Strict-Transport-Security max-age=15768000;
      ssl_stapling on;
      ssl_stapling_verify on;

      root /;
      location = / {

        rewrite .* /var/www/index.html;
      }

      location /api {
        proxy_pass https://goapi/api;
          proxy_redirect     off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

      }

      location /.well-known {
        root /var/www;
      }
      location /metrics {
        proxy_pass https://goapi/metrics;
          proxy_redirect     off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

      }
      location /image {
        if ($invalid_referer) {
          return 403;
        }

        access_log off;
        expires 5m;
        add_header Cache-Control public;
        proxy_pass https://goapi/image;
          proxy_redirect     off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_set_header X-Forwarded-Proto https;
      }

      location /ws {
        access_log      off;
        proxy_read_timeout 36000s;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass https://goapi/ws;
          proxy_redirect off;
      }
      location ~ .(css)$ {
        add_header Access-Control-Allow-Origin *;
        add_header  Content-Type    text/css;
        root /var/www;
      }
      location ~ .(js|png|json|ico|svg|map)$ {
        add_header Access-Control-Allow-Origin *;
        root /var/www;
      }
    }

}
